; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\stm32_sdio.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\stm32_sdio.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\Core\Inc -IC:\workspace\stm32_bootloader\RTE\_stm32iap -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=522 -DSTM32F10X_HD -DSTM32F103xE --omf_browse=.\objects\stm32_sdio.crf Core\Src\stm32_sdio.c]
                          THUMB

                          AREA ||i.SDIO_CEATAITCmd||, CODE, READONLY, ALIGN=2

                  SDIO_CEATAITCmd PROC
;;;572      */
;;;573    void SDIO_CEATAITCmd(FunctionalState NewState)
000000  2101              MOVS     r1,#1
;;;574    { 
;;;575      /* Check the parameters */
;;;576      *(__IO uint32_t *) CMD_NIEN_BB = (uint32_t)((~((uint32_t)NewState)) & ((uint32_t)0x1));
000002  4381              BICS     r1,r1,r0
000004  4a01              LDR      r2,|L1.12|
000006  6011              STR      r1,[r2,#0]
;;;577    }
000008  4770              BX       lr
;;;578    
                          ENDP

00000a  0000              DCW      0x0000
                  |L1.12|
                          DCD      0x423001b4

                          AREA ||i.SDIO_ClearFlag||, CODE, READONLY, ALIGN=2

                  SDIO_ClearFlag PROC
;;;656      */
;;;657    void SDIO_ClearFlag(uint32_t SDIO_FLAG)
000000  4901              LDR      r1,|L2.8|
;;;658    { 
;;;659      /* Check the parameters */
;;;660      SDIO->ICR = SDIO_FLAG;
000002  6388              STR      r0,[r1,#0x38]
;;;661    }
000004  4770              BX       lr
;;;662    
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      0x40018000

                          AREA ||i.SDIO_ClearITPendingBit||, CODE, READONLY, ALIGN=2

                  SDIO_ClearITPendingBit PROC
;;;728      */
;;;729    void SDIO_ClearITPendingBit(uint32_t SDIO_IT)
000000  4901              LDR      r1,|L3.8|
;;;730    { 
;;;731      /* Check the parameters */
;;;732      SDIO->ICR = SDIO_IT;
000002  6388              STR      r0,[r1,#0x38]
;;;733    }
000004  4770              BX       lr
;;;734    
                          ENDP

000006  0000              DCW      0x0000
                  |L3.8|
                          DCD      0x40018000

                          AREA ||i.SDIO_ClockCmd||, CODE, READONLY, ALIGN=2

                  SDIO_ClockCmd PROC
;;;227      */
;;;228    void SDIO_ClockCmd(FunctionalState NewState)
000000  4901              LDR      r1,|L4.8|
;;;229    {
;;;230      /* Check the parameters */
;;;231      *(__IO uint32_t *) CLKCR_CLKEN_BB = (uint32_t)NewState;
000002  6008              STR      r0,[r1,#0]
;;;232    }
000004  4770              BX       lr
;;;233    
                          ENDP

000006  0000              DCW      0x0000
                  |L4.8|
                          DCD      0x423000a0

                          AREA ||i.SDIO_CmdStructInit||, CODE, READONLY, ALIGN=1

                  SDIO_CmdStructInit PROC
;;;360      */
;;;361    void SDIO_CmdStructInit(SDIO_CmdInitTypeDef* SDIO_CmdInitStruct)
000000  2100              MOVS     r1,#0
;;;362    {
;;;363      /* SDIO_CmdInitStruct members default value */
;;;364      SDIO_CmdInitStruct->SDIO_Argument = 0x00;
000002  6001              STR      r1,[r0,#0]
;;;365      SDIO_CmdInitStruct->SDIO_CmdIndex = 0x00;
000004  6041              STR      r1,[r0,#4]
;;;366      SDIO_CmdInitStruct->SDIO_Response = SDIO_Response_No;
000006  6081              STR      r1,[r0,#8]
;;;367      SDIO_CmdInitStruct->SDIO_Wait = SDIO_Wait_No;
000008  60c1              STR      r1,[r0,#0xc]
;;;368      SDIO_CmdInitStruct->SDIO_CPSM = SDIO_CPSM_Disable;
00000a  6101              STR      r1,[r0,#0x10]
;;;369    }
00000c  4770              BX       lr
;;;370    
                          ENDP


                          AREA ||i.SDIO_CommandCompletionCmd||, CODE, READONLY, ALIGN=2

                  SDIO_CommandCompletionCmd PROC
;;;561      */
;;;562    void SDIO_CommandCompletionCmd(FunctionalState NewState)
000000  4901              LDR      r1,|L6.8|
;;;563    { 
;;;564      /* Check the parameters */
;;;565      *(__IO uint32_t *) CMD_ENCMDCOMPL_BB = (uint32_t)NewState;
000002  6008              STR      r0,[r1,#0]
;;;566    }
000004  4770              BX       lr
;;;567    
                          ENDP

000006  0000              DCW      0x0000
                  |L6.8|
                          DCD      0x423001b0

                          AREA ||i.SDIO_DMACmd||, CODE, READONLY, ALIGN=2

                  SDIO_DMACmd PROC
;;;316      */
;;;317    void SDIO_DMACmd(FunctionalState NewState)
000000  4901              LDR      r1,|L7.8|
;;;318    {
;;;319      /* Check the parameters */
;;;320      *(__IO uint32_t *) DCTRL_DMAEN_BB = (uint32_t)NewState;
000002  6008              STR      r0,[r1,#0]
;;;321    }
000004  4770              BX       lr
;;;322    
                          ENDP

000006  0000              DCW      0x0000
                  |L7.8|
                          DCD      0x4230058c

                          AREA ||i.SDIO_DataConfig||, CODE, READONLY, ALIGN=2

                  SDIO_DataConfig PROC
;;;407      */
;;;408    void SDIO_DataConfig(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
000000  2100              MOVS     r1,#0
;;;409    {
;;;410      uint32_t tmpreg = 0;
;;;411      
;;;412      /* Check the parameters */
;;;413    /*---------------------------- SDIO DTIMER Configuration ---------------------*/
;;;414      /* Set the SDIO Data TimeOut value */
;;;415      SDIO->DTIMER = SDIO_DataInitStruct->SDIO_DataTimeOut;
000002  4b0a              LDR      r3,|L8.44|
000004  6802              LDR      r2,[r0,#0]
000006  625a              STR      r2,[r3,#0x24]
;;;416    
;;;417    /*---------------------------- SDIO DLEN Configuration -----------------------*/
;;;418      /* Set the SDIO DataLength value */
;;;419      SDIO->DLEN = SDIO_DataInitStruct->SDIO_DataLength;
000008  6842              LDR      r2,[r0,#4]
00000a  629a              STR      r2,[r3,#0x28]
;;;420    
;;;421    /*---------------------------- SDIO DCTRL Configuration ----------------------*/  
;;;422      /* Get the SDIO DCTRL value */
;;;423      tmpreg = SDIO->DCTRL;
00000c  461a              MOV      r2,r3
00000e  6ad1              LDR      r1,[r2,#0x2c]
;;;424      /* Clear DEN, DTMODE, DTDIR and DBCKSIZE bits */
;;;425      tmpreg &= DCTRL_CLEAR_MASK;
000010  f02101f7          BIC      r1,r1,#0xf7
;;;426      /* Set DEN bit according to SDIO_DPSM value */
;;;427      /* Set DTMODE bit according to SDIO_TransferMode value */
;;;428      /* Set DTDIR bit according to SDIO_TransferDir value */
;;;429      /* Set DBCKSIZE bits according to SDIO_DataBlockSize value */
;;;430      tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferDir
000014  e9d02302          LDRD     r2,r3,[r0,#8]
000018  431a              ORRS     r2,r2,r3
00001a  6903              LDR      r3,[r0,#0x10]
00001c  431a              ORRS     r2,r2,r3
00001e  6943              LDR      r3,[r0,#0x14]
000020  431a              ORRS     r2,r2,r3
000022  4311              ORRS     r1,r1,r2
;;;431               | SDIO_DataInitStruct->SDIO_TransferMode | SDIO_DataInitStruct->SDIO_DPSM;
;;;432    
;;;433      /* Write to SDIO DCTRL */
;;;434      SDIO->DCTRL = tmpreg;
000024  4a01              LDR      r2,|L8.44|
000026  62d1              STR      r1,[r2,#0x2c]
;;;435    }
000028  4770              BX       lr
;;;436    
                          ENDP

00002a  0000              DCW      0x0000
                  |L8.44|
                          DCD      0x40018000

                          AREA ||i.SDIO_DataStructInit||, CODE, READONLY, ALIGN=1

                  SDIO_DataStructInit PROC
;;;442      */
;;;443    void SDIO_DataStructInit(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
000000  f04f31ff          MOV      r1,#0xffffffff
;;;444    {
;;;445      /* SDIO_DataInitStruct members default value */
;;;446      SDIO_DataInitStruct->SDIO_DataTimeOut = 0xFFFFFFFF;
000004  6001              STR      r1,[r0,#0]
;;;447      SDIO_DataInitStruct->SDIO_DataLength = 0x00;
000006  2100              MOVS     r1,#0
000008  6041              STR      r1,[r0,#4]
;;;448      SDIO_DataInitStruct->SDIO_DataBlockSize = SDIO_DataBlockSize_1b;
00000a  6081              STR      r1,[r0,#8]
;;;449      SDIO_DataInitStruct->SDIO_TransferDir = SDIO_TransferDir_ToCard;
00000c  60c1              STR      r1,[r0,#0xc]
;;;450      SDIO_DataInitStruct->SDIO_TransferMode = SDIO_TransferMode_Block;  
00000e  6101              STR      r1,[r0,#0x10]
;;;451      SDIO_DataInitStruct->SDIO_DPSM = SDIO_DPSM_Disable;
000010  6141              STR      r1,[r0,#0x14]
;;;452    }
000012  4770              BX       lr
;;;453    
                          ENDP


                          AREA ||i.SDIO_DeInit||, CODE, READONLY, ALIGN=2

                  SDIO_DeInit PROC
;;;159      */
;;;160    void SDIO_DeInit(void)
000000  2000              MOVS     r0,#0
;;;161    {
;;;162      SDIO->POWER = 0x00000000;
000002  4906              LDR      r1,|L10.28|
000004  6008              STR      r0,[r1,#0]
;;;163      SDIO->CLKCR = 0x00000000;
000006  6048              STR      r0,[r1,#4]
;;;164      SDIO->ARG = 0x00000000;
000008  6088              STR      r0,[r1,#8]
;;;165      SDIO->CMD = 0x00000000;
00000a  60c8              STR      r0,[r1,#0xc]
;;;166      SDIO->DTIMER = 0x00000000;
00000c  6248              STR      r0,[r1,#0x24]
;;;167      SDIO->DLEN = 0x00000000;
00000e  6288              STR      r0,[r1,#0x28]
;;;168      SDIO->DCTRL = 0x00000000;
000010  62c8              STR      r0,[r1,#0x2c]
;;;169      SDIO->ICR = 0x00C007FF;
000012  4803              LDR      r0,|L10.32|
000014  6388              STR      r0,[r1,#0x38]
;;;170      SDIO->MASK = 0x00000000;
000016  2000              MOVS     r0,#0
000018  63c8              STR      r0,[r1,#0x3c]
;;;171    }
00001a  4770              BX       lr
;;;172    
                          ENDP

                  |L10.28|
                          DCD      0x40018000
                  |L10.32|
                          DCD      0x00c007ff

                          AREA ||i.SDIO_GetCommandResponse||, CODE, READONLY, ALIGN=2

                  SDIO_GetCommandResponse PROC
;;;375      */
;;;376    uint8_t SDIO_GetCommandResponse(void)
000000  4801              LDR      r0,|L11.8|
;;;377    {
;;;378      return (uint8_t)(SDIO->RESPCMD);
000002  6900              LDR      r0,[r0,#0x10]
000004  b2c0              UXTB     r0,r0
;;;379    }
000006  4770              BX       lr
;;;380    
                          ENDP

                  |L11.8|
                          DCD      0x40018000

                          AREA ||i.SDIO_GetDataCounter||, CODE, READONLY, ALIGN=2

                  SDIO_GetDataCounter PROC
;;;458      */
;;;459    uint32_t SDIO_GetDataCounter(void)
000000  4801              LDR      r0,|L12.8|
;;;460    { 
;;;461      return SDIO->DCOUNT;
000002  6b00              LDR      r0,[r0,#0x30]
;;;462    }
000004  4770              BX       lr
;;;463    
                          ENDP

000006  0000              DCW      0x0000
                  |L12.8|
                          DCD      0x40018000

                          AREA ||i.SDIO_GetFIFOCount||, CODE, READONLY, ALIGN=2

                  SDIO_GetFIFOCount PROC
;;;488      */
;;;489    uint32_t SDIO_GetFIFOCount(void)
000000  4801              LDR      r0,|L13.8|
;;;490    { 
;;;491      return SDIO->FIFOCNT;
000002  6c80              LDR      r0,[r0,#0x48]
;;;492    }
000004  4770              BX       lr
;;;493    
                          ENDP

000006  0000              DCW      0x0000
                  |L13.8|
                          DCD      0x40018000

                          AREA ||i.SDIO_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  SDIO_GetFlagStatus PROC
;;;620      */
;;;621    FlagStatus SDIO_GetFlagStatus(uint32_t SDIO_FLAG)
000000  4601              MOV      r1,r0
;;;622    { 
;;;623      FlagStatus bitstatus = RESET;
000002  2000              MOVS     r0,#0
;;;624      
;;;625      /* Check the parameters */
;;;626      if ((SDIO->STA & SDIO_FLAG) != (uint32_t)RESET)
000004  4a03              LDR      r2,|L14.20|
000006  6b52              LDR      r2,[r2,#0x34]
000008  400a              ANDS     r2,r2,r1
00000a  b10a              CBZ      r2,|L14.16|
;;;627      {
;;;628        bitstatus = SET;
00000c  2001              MOVS     r0,#1
00000e  e000              B        |L14.18|
                  |L14.16|
;;;629      }
;;;630      else
;;;631      {
;;;632        bitstatus = RESET;
000010  2000              MOVS     r0,#0
                  |L14.18|
;;;633      }
;;;634      return bitstatus;
;;;635    }
000012  4770              BX       lr
;;;636    
                          ENDP

                  |L14.20|
                          DCD      0x40018000

                          AREA ||i.SDIO_GetITStatus||, CODE, READONLY, ALIGN=2

                  SDIO_GetITStatus PROC
;;;693      */
;;;694    ITStatus SDIO_GetITStatus(uint32_t SDIO_IT)
000000  4601              MOV      r1,r0
;;;695    { 
;;;696      ITStatus bitstatus = RESET;
000002  2000              MOVS     r0,#0
;;;697      
;;;698      /* Check the parameters */
;;;699      if ((SDIO->STA & SDIO_IT) != (uint32_t)RESET)  
000004  4a03              LDR      r2,|L15.20|
000006  6b52              LDR      r2,[r2,#0x34]
000008  400a              ANDS     r2,r2,r1
00000a  b10a              CBZ      r2,|L15.16|
;;;700      {
;;;701        bitstatus = SET;
00000c  2001              MOVS     r0,#1
00000e  e000              B        |L15.18|
                  |L15.16|
;;;702      }
;;;703      else
;;;704      {
;;;705        bitstatus = RESET;
000010  2000              MOVS     r0,#0
                  |L15.18|
;;;706      }
;;;707      return bitstatus;
;;;708    }
000012  4770              BX       lr
;;;709    
                          ENDP

                  |L15.20|
                          DCD      0x40018000

                          AREA ||i.SDIO_GetPowerState||, CODE, READONLY, ALIGN=2

                  SDIO_GetPowerState PROC
;;;257      */
;;;258    uint32_t SDIO_GetPowerState(void)
000000  4802              LDR      r0,|L16.12|
;;;259    {
;;;260      return (SDIO->POWER & (~PWR_PWRCTRL_MASK));
000002  6800              LDR      r0,[r0,#0]
000004  f0000003          AND      r0,r0,#3
;;;261    }
000008  4770              BX       lr
;;;262    
                          ENDP

00000a  0000              DCW      0x0000
                  |L16.12|
                          DCD      0x40018000

                          AREA ||i.SDIO_GetResponse||, CODE, READONLY, ALIGN=2

                  SDIO_GetResponse PROC
;;;390      */
;;;391    uint32_t SDIO_GetResponse(uint32_t SDIO_RESP)
000000  b508              PUSH     {r3,lr}
;;;392    {
000002  4601              MOV      r1,r0
;;;393      __IO uint32_t tmp = 0;
000004  2000              MOVS     r0,#0
000006  9000              STR      r0,[sp,#0]
;;;394    
;;;395      /* Check the parameters */
;;;396      tmp = SDIO_RESP_ADDR + SDIO_RESP;
000008  4802              LDR      r0,|L17.20|
00000a  4408              ADD      r0,r0,r1
00000c  9000              STR      r0,[sp,#0]
;;;397      
;;;398      return (*(__IO uint32_t *) tmp); 
00000e  9800              LDR      r0,[sp,#0]
000010  6800              LDR      r0,[r0,#0]
;;;399    }
000012  bd08              POP      {r3,pc}
;;;400    
                          ENDP

                  |L17.20|
                          DCD      0x40018014

                          AREA ||i.SDIO_ITConfig||, CODE, READONLY, ALIGN=2

                  SDIO_ITConfig PROC
;;;295      */
;;;296    void SDIO_ITConfig(uint32_t SDIO_IT, FunctionalState NewState)
000000  b129              CBZ      r1,|L18.14|
;;;297    {
;;;298      /* Check the parameters */
;;;299      if (NewState != DISABLE)
;;;300      {
;;;301        /* Enable the SDIO interrupts */
;;;302        SDIO->MASK |= SDIO_IT;
000002  4a06              LDR      r2,|L18.28|
000004  6bd2              LDR      r2,[r2,#0x3c]
000006  4302              ORRS     r2,r2,r0
000008  4b04              LDR      r3,|L18.28|
00000a  63da              STR      r2,[r3,#0x3c]
00000c  e004              B        |L18.24|
                  |L18.14|
;;;303      }
;;;304      else
;;;305      {
;;;306        /* Disable the SDIO interrupts */
;;;307        SDIO->MASK &= ~SDIO_IT;
00000e  4a03              LDR      r2,|L18.28|
000010  6bd2              LDR      r2,[r2,#0x3c]
000012  4382              BICS     r2,r2,r0
000014  4b01              LDR      r3,|L18.28|
000016  63da              STR      r2,[r3,#0x3c]
                  |L18.24|
;;;308      } 
;;;309    }
000018  4770              BX       lr
;;;310    
                          ENDP

00001a  0000              DCW      0x0000
                  |L18.28|
                          DCD      0x40018000

                          AREA ||i.SDIO_Init||, CODE, READONLY, ALIGN=2

                  SDIO_Init PROC
;;;179      */
;;;180    void SDIO_Init(SDIO_InitTypeDef* SDIO_InitStruct)
000000  2100              MOVS     r1,#0
;;;181    {
;;;182      uint32_t tmpreg = 0;
;;;183        
;;;184      /* Check the parameters */
;;;185    /*---------------------------- SDIO CLKCR Configuration ------------------------*/  
;;;186      /* Get the SDIO CLKCR value */
;;;187      tmpreg = SDIO->CLKCR;
000002  4a0a              LDR      r2,|L19.44|
000004  6851              LDR      r1,[r2,#4]
;;;188      
;;;189      /* Clear CLKDIV, PWRSAV, BYPASS, WIDBUS, NEGEDGE, HWFC_EN bits */
;;;190      tmpreg &= CLKCR_CLEAR_MASK;
000006  f64762ff          MOV      r2,#0x7eff
00000a  4391              BICS     r1,r1,r2
;;;191      
;;;192      /* Set CLKDIV bits according to SDIO_ClockDiv value */
;;;193      /* Set PWRSAV bit according to SDIO_ClockPowerSave value */
;;;194      /* Set BYPASS bit according to SDIO_ClockBypass value */
;;;195      /* Set WIDBUS bits according to SDIO_BusWide value */
;;;196      /* Set NEGEDGE bits according to SDIO_ClockEdge value */
;;;197      /* Set HWFC_EN bits according to SDIO_HardwareFlowControl value */
;;;198      tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
00000c  7d02              LDRB     r2,[r0,#0x14]
00000e  6883              LDR      r3,[r0,#8]
000010  431a              ORRS     r2,r2,r3
000012  6843              LDR      r3,[r0,#4]
000014  431a              ORRS     r2,r2,r3
000016  68c3              LDR      r3,[r0,#0xc]
000018  431a              ORRS     r2,r2,r3
00001a  6803              LDR      r3,[r0,#0]
00001c  431a              ORRS     r2,r2,r3
00001e  6903              LDR      r3,[r0,#0x10]
000020  431a              ORRS     r2,r2,r3
000022  4311              ORRS     r1,r1,r2
;;;199                 SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
;;;200                 SDIO_InitStruct->SDIO_ClockEdge | SDIO_InitStruct->SDIO_HardwareFlowControl); 
;;;201      
;;;202      /* Write to SDIO CLKCR */
;;;203      SDIO->CLKCR = tmpreg;
000024  4a01              LDR      r2,|L19.44|
000026  6051              STR      r1,[r2,#4]
;;;204    }
000028  4770              BX       lr
;;;205    
                          ENDP

00002a  0000              DCW      0x0000
                  |L19.44|
                          DCD      0x40018000

                          AREA ||i.SDIO_ReadData||, CODE, READONLY, ALIGN=2

                  SDIO_ReadData PROC
;;;468      */
;;;469    uint32_t SDIO_ReadData(void)
000000  4801              LDR      r0,|L20.8|
;;;470    { 
;;;471      return SDIO->FIFO;
000002  6800              LDR      r0,[r0,#0]
;;;472    }
000004  4770              BX       lr
;;;473    
                          ENDP

000006  0000              DCW      0x0000
                  |L20.8|
                          DCD      0x40018080

                          AREA ||i.SDIO_SendCEATACmd||, CODE, READONLY, ALIGN=2

                  SDIO_SendCEATACmd PROC
;;;583      */
;;;584    void SDIO_SendCEATACmd(FunctionalState NewState)
000000  4901              LDR      r1,|L21.8|
;;;585    { 
;;;586      /* Check the parameters */
;;;587      *(__IO uint32_t *) CMD_ATACMD_BB = (uint32_t)NewState;
000002  6008              STR      r0,[r1,#0]
;;;588    }
000004  4770              BX       lr
;;;589    
                          ENDP

000006  0000              DCW      0x0000
                  |L21.8|
                          DCD      0x423001b8

                          AREA ||i.SDIO_SendCommand||, CODE, READONLY, ALIGN=2

                  SDIO_SendCommand PROC
;;;329      */
;;;330    void SDIO_SendCommand(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct)
000000  2100              MOVS     r1,#0
;;;331    {
;;;332      uint32_t tmpreg = 0;
;;;333      
;;;334      /* Check the parameters */
;;;335    /*---------------------------- SDIO ARG Configuration ------------------------*/
;;;336      /* Set the SDIO Argument value */
;;;337      SDIO->ARG = SDIO_CmdInitStruct->SDIO_Argument;
000002  4b09              LDR      r3,|L22.40|
000004  6802              LDR      r2,[r0,#0]
000006  609a              STR      r2,[r3,#8]
;;;338      
;;;339    /*---------------------------- SDIO CMD Configuration ------------------------*/  
;;;340      /* Get the SDIO CMD value */
;;;341      tmpreg = SDIO->CMD;
000008  461a              MOV      r2,r3
00000a  68d1              LDR      r1,[r2,#0xc]
;;;342      /* Clear CMDINDEX, WAITRESP, WAITINT, WAITPEND, CPSMEN bits */
;;;343      tmpreg &= CMD_CLEAR_MASK;
00000c  f36f010a          BFC      r1,#0,#11
;;;344      /* Set CMDINDEX bits according to SDIO_CmdIndex value */
;;;345      /* Set WAITRESP bits according to SDIO_Response value */
;;;346      /* Set WAITINT and WAITPEND bits according to SDIO_Wait value */
;;;347      /* Set CPSMEN bits according to SDIO_CPSM value */
;;;348      tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
000010  e9d02301          LDRD     r2,r3,[r0,#4]
000014  431a              ORRS     r2,r2,r3
000016  68c3              LDR      r3,[r0,#0xc]
000018  431a              ORRS     r2,r2,r3
00001a  6903              LDR      r3,[r0,#0x10]
00001c  431a              ORRS     r2,r2,r3
00001e  4311              ORRS     r1,r1,r2
;;;349               | SDIO_CmdInitStruct->SDIO_Wait | SDIO_CmdInitStruct->SDIO_CPSM;
;;;350      
;;;351      /* Write to SDIO CMD */
;;;352      SDIO->CMD = tmpreg;
000020  4a01              LDR      r2,|L22.40|
000022  60d1              STR      r1,[r2,#0xc]
;;;353    }
000024  4770              BX       lr
;;;354    
                          ENDP

000026  0000              DCW      0x0000
                  |L22.40|
                          DCD      0x40018000

                          AREA ||i.SDIO_SendSDIOSuspendCmd||, CODE, READONLY, ALIGN=2

                  SDIO_SendSDIOSuspendCmd PROC
;;;549      */
;;;550    void SDIO_SendSDIOSuspendCmd(FunctionalState NewState)
000000  4901              LDR      r1,|L23.8|
;;;551    { 
;;;552      /* Check the parameters */
;;;553      *(__IO uint32_t *) CMD_SDIOSUSPEND_BB = (uint32_t)NewState;
000002  6008              STR      r0,[r1,#0]
;;;554    }
000004  4770              BX       lr
;;;555    
                          ENDP

000006  0000              DCW      0x0000
                  |L23.8|
                          DCD      0x423001ac

                          AREA ||i.SDIO_SetPowerState||, CODE, READONLY, ALIGN=2

                  SDIO_SetPowerState PROC
;;;241      */
;;;242    void SDIO_SetPowerState(uint32_t SDIO_PowerState)
000000  4905              LDR      r1,|L24.24|
;;;243    {
;;;244      /* Check the parameters */
;;;245      SDIO->POWER &= PWR_PWRCTRL_MASK;
000002  6809              LDR      r1,[r1,#0]
000004  f0210103          BIC      r1,r1,#3
000008  4a03              LDR      r2,|L24.24|
00000a  6011              STR      r1,[r2,#0]
;;;246      SDIO->POWER |= SDIO_PowerState;
00000c  4611              MOV      r1,r2
00000e  6809              LDR      r1,[r1,#0]
000010  4301              ORRS     r1,r1,r0
000012  6011              STR      r1,[r2,#0]
;;;247    }
000014  4770              BX       lr
;;;248    
                          ENDP

000016  0000              DCW      0x0000
                  |L24.24|
                          DCD      0x40018000

                          AREA ||i.SDIO_SetSDIOOperation||, CODE, READONLY, ALIGN=2

                  SDIO_SetSDIOOperation PROC
;;;537      */
;;;538    void SDIO_SetSDIOOperation(FunctionalState NewState)
000000  4901              LDR      r1,|L25.8|
;;;539    { 
;;;540      /* Check the parameters */
;;;541      *(__IO uint32_t *) DCTRL_SDIOEN_BB = (uint32_t)NewState;
000002  6008              STR      r0,[r1,#0]
;;;542    }
000004  4770              BX       lr
;;;543    
                          ENDP

000006  0000              DCW      0x0000
                  |L25.8|
                          DCD      0x423005ac

                          AREA ||i.SDIO_SetSDIOReadWaitMode||, CODE, READONLY, ALIGN=2

                  SDIO_SetSDIOReadWaitMode PROC
;;;525      */
;;;526    void SDIO_SetSDIOReadWaitMode(uint32_t SDIO_ReadWaitMode)
000000  4901              LDR      r1,|L26.8|
;;;527    {
;;;528      /* Check the parameters */
;;;529      *(__IO uint32_t *) DCTRL_RWMOD_BB = SDIO_ReadWaitMode;
000002  6008              STR      r0,[r1,#0]
;;;530    }
000004  4770              BX       lr
;;;531    
                          ENDP

000006  0000              DCW      0x0000
                  |L26.8|
                          DCD      0x423005a8

                          AREA ||i.SDIO_StartSDIOReadWait||, CODE, READONLY, ALIGN=2

                  SDIO_StartSDIOReadWait PROC
;;;499      */
;;;500    void SDIO_StartSDIOReadWait(FunctionalState NewState)
000000  4901              LDR      r1,|L27.8|
;;;501    { 
;;;502      /* Check the parameters */
;;;503      *(__IO uint32_t *) DCTRL_RWSTART_BB = (uint32_t) NewState;
000002  6008              STR      r0,[r1,#0]
;;;504    }
000004  4770              BX       lr
;;;505    
                          ENDP

000006  0000              DCW      0x0000
                  |L27.8|
                          DCD      0x423005a0

                          AREA ||i.SDIO_StopSDIOReadWait||, CODE, READONLY, ALIGN=2

                  SDIO_StopSDIOReadWait PROC
;;;511      */
;;;512    void SDIO_StopSDIOReadWait(FunctionalState NewState)
000000  4901              LDR      r1,|L28.8|
;;;513    { 
;;;514      /* Check the parameters */
;;;515      *(__IO uint32_t *) DCTRL_RWSTOP_BB = (uint32_t) NewState;
000002  6008              STR      r0,[r1,#0]
;;;516    }
000004  4770              BX       lr
;;;517    
                          ENDP

000006  0000              DCW      0x0000
                  |L28.8|
                          DCD      0x423005a4

                          AREA ||i.SDIO_StructInit||, CODE, READONLY, ALIGN=1

                  SDIO_StructInit PROC
;;;211      */
;;;212    void SDIO_StructInit(SDIO_InitTypeDef* SDIO_InitStruct)
000000  2100              MOVS     r1,#0
;;;213    {
;;;214      /* SDIO_InitStruct members default value */
;;;215      SDIO_InitStruct->SDIO_ClockDiv = 0x00;
000002  7501              STRB     r1,[r0,#0x14]
;;;216      SDIO_InitStruct->SDIO_ClockEdge = SDIO_ClockEdge_Rising;
000004  6001              STR      r1,[r0,#0]
;;;217      SDIO_InitStruct->SDIO_ClockBypass = SDIO_ClockBypass_Disable;
000006  6041              STR      r1,[r0,#4]
;;;218      SDIO_InitStruct->SDIO_ClockPowerSave = SDIO_ClockPowerSave_Disable;
000008  6081              STR      r1,[r0,#8]
;;;219      SDIO_InitStruct->SDIO_BusWide = SDIO_BusWide_1b;
00000a  60c1              STR      r1,[r0,#0xc]
;;;220      SDIO_InitStruct->SDIO_HardwareFlowControl = SDIO_HardwareFlowControl_Disable;
00000c  6101              STR      r1,[r0,#0x10]
;;;221    }
00000e  4770              BX       lr
;;;222    
                          ENDP


                          AREA ||i.SDIO_WriteData||, CODE, READONLY, ALIGN=2

                  SDIO_WriteData PROC
;;;478      */
;;;479    void SDIO_WriteData(uint32_t Data)
000000  4901              LDR      r1,|L30.8|
;;;480    { 
;;;481      SDIO->FIFO = Data;
000002  6008              STR      r0,[r1,#0]
;;;482    }
000004  4770              BX       lr
;;;483    
                          ENDP

000006  0000              DCW      0x0000
                  |L30.8|
                          DCD      0x40018080

;*** Start embedded assembler ***

#line 1 "Core\\Src\\stm32_sdio.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_stm32_sdio_c_c8827541____REV16|
#line 388 ".\\Core\\Inc\\cmsis_armcc.h"
|__asm___12_stm32_sdio_c_c8827541____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_stm32_sdio_c_c8827541____REVSH|
#line 402
|__asm___12_stm32_sdio_c_c8827541____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___12_stm32_sdio_c_c8827541____RRX|
#line 587
|__asm___12_stm32_sdio_c_c8827541____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
